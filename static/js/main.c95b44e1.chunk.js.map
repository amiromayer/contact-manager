{"version":3,"sources":["context.js","components/layout/Header.js","components/pages/About.js","components/pages/NotFound.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/contacts/EditContact.js","components/test/Test.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","Object","objectSpread","contacts","filter","contact","id","payload","concat","toConsumableArray","map","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","dispatch","setState","inherits","createClass","key","value","_componentDidMount","asyncToGenerator","regenerator_default","a","mark","_callee","res","wrap","_context","prev","next","axios","get","sent","data","stop","react_default","createElement","props","children","Component","Consumer","Header","branding","className","style","minHeight","Link","to","defaultProps","About","NotFound","Contact","showContactInfo","onToggle","onDeleteClick","delete","_this2","_this$props$contact","name","email","phone","onClick","cursor","float","color","bind","marginRight","size","Contacts","Fragment","contacts_Contact","TextInputGroup","_ref","label","placeholder","onChange","error","htmlFor","classnames","is-invalid","AddContact","errors","e","defineProperty","target","onSubmit","_this$state","newContact","preventDefault","abrupt","post","history","push","_this$state2","layout_TextInputGroup","EditContact","updatedContact","match","params","put","Test","fetch","then","response","json","App","context_Provider","HashRouter","layout_Header","Switch","Route","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c95b44e1.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"axios\";\n\nconst Context = React.createContext();\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"DELETE_CONTACT\":\n      return {\n        ...state,\n        contacts: state.contacts.filter(\n          contact => contact.id !== action.payload\n        )\n      };\n    case \"ADD_CONTACT\":\n      return {\n        ...state,\n        contacts: [action.payload, ...state.contacts]\n      };\n    case \"UPDATE_CONTACT\":\n      return {\n        ...state,\n        contacts: state.contacts.map(contact =>\n          contact.id === action.payload.id\n            ? (contact = action.payload)\n            : contact\n        )\n      };\n    default:\n      return state;\n  }\n};\n\nexport class Provider extends Component {\n  state = {\n    contacts: [],\n    dispatch: action => this.setState(state => reducer(state, action))\n  };\n\n  async componentDidMount() {\n    const res = await axios.get(\"https://jsonplaceholder.typicode.com/users/\");\n    this.setState({ contacts: res.data });\n  }\n\n  render() {\n    return (\n      <Context.Provider value={this.state}>\n        {this.props.children}\n      </Context.Provider>\n    );\n  }\n}\n\nexport const Consumer = Context.Consumer;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\n\nconst Header = props => {\n  const { branding } = props;\n  return (\n    <nav\n      className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\"\n      style={{ minHeight: \"80px\" }}\n    >\n      <div className=\"container\">\n        <Link to=\"/\" className=\"navbar-brand\">\n          {branding}\n        </Link>\n\n        <div>\n          <ul className=\"navbar-nav mr-auto\">\n            <li className=\"nav-item\">\n              <Link to=\"/\" className=\"nav-link\">\n                Home\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to=\"/about\" className=\"nav-link\">\n                About\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to=\"/contact/add\" className=\"nav-link\">\n                Add\n              </Link>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </nav>\n  );\n};\n\nHeader.defaultProps = { branding: \"My App\" };\n\nHeader.propTypes = { branding: PropTypes.string.isRequired };\n\nexport default Header;\n","import React from \"react\";\n\nexport default function About() {\n  return (\n    <div>\n      <h1 className=\"mb-2\">About</h1>\n      <p className=\"lead\">Dummy app to manage contacts. Built with React</p>\n    </div>\n  );\n}\n","import React from \"react\";\n\nexport default function NotFound() {\n  return (\n    <div>\n      <h1>404 Page not found</h1>\n      <p className=\"lead\">Oops. Something went wrong</p>\n    </div>\n  );\n}\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport { Consumer } from \"../../context\";\nimport axios from \"axios\";\n\nclass Contact extends Component {\n  state = { showContactInfo: false };\n\n  onToggle = () => {\n    this.setState({ showContactInfo: !this.state.showContactInfo });\n  };\n\n  onDeleteClick = async (id, dispatch) => {\n    await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\n    dispatch({ type: \"DELETE_CONTACT\", payload: id });\n  };\n\n  render() {\n    const { id, name, email, phone } = this.props.contact;\n    const { showContactInfo } = this.state;\n    return (\n      <Consumer>\n        {value => {\n          const { dispatch } = value;\n          return (\n            <div className=\"card card-body mb-3\">\n              <h4>\n                {name}{\" \"}\n                <i\n                  onClick={this.onToggle}\n                  className={\n                    showContactInfo ? \"fas fa-angle-up\" : \"fas fa-angle-down\"\n                  }\n                  style={{ cursor: \"pointer\" }}\n                />\n                <i\n                  className=\"fas fa-times\"\n                  style={{ cursor: \"pointer\", float: \"right\", color: \"red\" }}\n                  onClick={this.onDeleteClick.bind(this, id, dispatch)}\n                />\n                <Link to={`contact/edit/${id}`}>\n                  <i\n                    className=\"fas fa-pencil-alt\"\n                    style={{\n                      cursor: \"pointer\",\n                      float: \"right\",\n                      color: \"black\",\n                      marginRight: \"1rem\",\n                      size: \"small\"\n                    }}\n                  />\n                </Link>\n              </h4>\n\n              {showContactInfo ? (\n                <ul className=\"list-group\">\n                  <li className=\"list-group-item\">Email: {email}</li>\n                  <li className=\"list-group-item\">Phone: {phone}</li>\n                </ul>\n              ) : null}\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\nContact.propTypes = {\n  contact: PropTypes.object.isRequired\n};\nexport default Contact;\n","import React, { Component } from \"react\";\nimport Contact from \"./Contact\";\nimport { Consumer } from \"../../context\";\n\nclass Contacts extends Component {\n  render() {\n    return (\n      <Consumer>\n        {value => {\n          const { contacts } = value;\n          return (\n            <React.Fragment>\n              <h1 className=\"mb-2\">Contact list</h1>\n              {contacts.map(contact => (\n                <Contact key={contact.id} contact={contact} />\n              ))}\n            </React.Fragment>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\nexport default Contacts;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classnames from \"classnames\";\n\nconst TextInputGroup = ({\n  label,\n  name,\n  type,\n  placeholder,\n  value,\n  onChange,\n  error\n}) => (\n  <div className=\"form-group\">\n    <label htmlFor={name}>{label}</label>\n    <input\n      type={type}\n      name={name}\n      className={classnames(\"form-control\", { \"is-invalid\": error })}\n      //className={error ? \"is-invalid form-control\" : \"form-control\"}\n      placeholder={placeholder}\n      value={value}\n      onChange={onChange}\n    />\n    {error && <div className=\"invalid-feedback\">{error}</div>}\n  </div>\n);\n\nTextInputGroup.propTypes = {\n  label: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  placeholder: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  error: PropTypes.string\n};\n\nTextInputGroup.defaultProps = {\n  type: \"text\"\n};\n\nexport default TextInputGroup;\n","import React, { Component } from \"react\";\nimport { Consumer } from \"../../context\";\nimport TextInputGroup from \"../layout/TextInputGroup\";\nimport axios from \"axios\";\n\nclass AddContact extends Component {\n  state = { name: \"\", email: \"\", phone: \"\", errors: {} };\n\n  onChange = e => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  onSubmit = async (dispatch, e) => {\n    e.preventDefault();\n    const { name, email, phone } = this.state;\n\n    //Check for errors\n    if (name === \"\") {\n      this.setState({ errors: { name: \"Name is required\" } });\n      return;\n    }\n    if (email === \"\") {\n      this.setState({ errors: { email: \"Email is required\" } });\n      return;\n    }\n    if (phone === \"\") {\n      this.setState({ errors: { phone: \"Phone number is required\" } });\n      return;\n    }\n\n    const newContact = { name, email, phone };\n\n    const res = await axios.post(\n      \"https://jsonplaceholder.typicode.com/users/\",\n      newContact\n    );\n    dispatch({ type: \"ADD_CONTACT\", payload: res.data });\n\n    //Clear state after adding new contact\n    this.setState({ name: \"\", email: \"\", phone: \"\", errors: {} });\n\n    this.props.history.push(\"/\");\n  };\n  render() {\n    const { name, email, phone, errors } = this.state;\n\n    return (\n      <Consumer>\n        {value => {\n          const { dispatch } = value;\n          return (\n            <div className=\"card mb-3\">\n              <div className=\"card-header\">Add Contact</div>\n              <div className=\"card-body\">\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\n                  <TextInputGroup\n                    label=\"Name\"\n                    name=\"name\"\n                    placeholder=\"Enter name\"\n                    value={name}\n                    onChange={this.onChange}\n                    error={errors.name}\n                  />\n\n                  <TextInputGroup\n                    label=\"Email\"\n                    name=\"email\"\n                    type=\"email\"\n                    placeholder=\"Enter email\"\n                    value={email}\n                    onChange={this.onChange}\n                    error={errors.email}\n                  />\n\n                  <TextInputGroup\n                    label=\"Phone\"\n                    name=\"phone\"\n                    placeholder=\"Enter phone\"\n                    value={phone}\n                    onChange={this.onChange}\n                    error={errors.phone}\n                  />\n                  <input\n                    className=\"btn btn-light btn-block\"\n                    type=\"submit\"\n                    value=\"Add contact\"\n                  />\n                </form>\n              </div>\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\nexport default AddContact;\n","import React, { Component } from \"react\";\nimport { Consumer } from \"../../context\";\nimport TextInputGroup from \"../layout/TextInputGroup\";\nimport axios from \"axios\";\n\nclass EditContact extends Component {\n  state = { name: \"\", email: \"\", phone: \"\", errors: {} };\n\n  async componentDidMount() {\n    const { id } = this.props.match.params;\n    const res = await axios.get(\n      `https://jsonplaceholder.typicode.com/users/${id}`\n    );\n    const contact = res.data;\n\n    this.setState({\n      name: contact.name,\n      email: contact.email,\n      phone: contact.phone\n    });\n  }\n\n  onChange = e => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  onSubmit = async (dispatch, e) => {\n    e.preventDefault();\n    const { name, email, phone } = this.state;\n\n    //Check for errors\n    if (name === \"\") {\n      this.setState({ errors: { name: \"Name is required\" } });\n      return;\n    }\n    if (email === \"\") {\n      this.setState({ errors: { email: \"Email is required\" } });\n      return;\n    }\n    if (phone === \"\") {\n      this.setState({ errors: { phone: \"Phone number is required\" } });\n      return;\n    }\n\n    const updatedContact = { name, email, phone };\n\n    const { id } = this.props.match.params;\n    const res = await axios.put(\n      `https://jsonplaceholder.typicode.com/users/${id}`,\n      updatedContact\n    );\n    dispatch({ type: \"UPDATE_CONTACT\", payload: res.data });\n\n    //Clear state after adding new contact\n    this.setState({ name: \"\", email: \"\", phone: \"\", errors: {} });\n\n    this.props.history.push(\"/\");\n  };\n\n  render() {\n    const { name, email, phone, errors } = this.state;\n\n    return (\n      <Consumer>\n        {value => {\n          const { dispatch } = value;\n          return (\n            <div className=\"card mb-3\">\n              <div className=\"card-header\">Edit Contact</div>\n              <div className=\"card-body\">\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\n                  <TextInputGroup\n                    label=\"Name\"\n                    name=\"name\"\n                    placeholder=\"Enter name\"\n                    value={name}\n                    onChange={this.onChange}\n                    error={errors.name}\n                  />\n\n                  <TextInputGroup\n                    label=\"Email\"\n                    name=\"email\"\n                    type=\"email\"\n                    placeholder=\"Enter email\"\n                    value={email}\n                    onChange={this.onChange}\n                    error={errors.email}\n                  />\n\n                  <TextInputGroup\n                    label=\"Phone\"\n                    name=\"phone\"\n                    placeholder=\"Enter phone\"\n                    value={phone}\n                    onChange={this.onChange}\n                    error={errors.phone}\n                  />\n                  <input\n                    className=\"btn btn-light btn-block\"\n                    type=\"submit\"\n                    value=\"Update contact\"\n                  />\n                </form>\n              </div>\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\nexport default EditContact;\n","import React, { Component } from \"react\";\n\nclass Test extends Component {\n  state = {\n    name: \"\",\n    email: \"\",\n    phone: \"\"\n  };\n\n  componentDidMount() {\n    fetch(\"https://jsonplaceholder.typicode.com/users/2\")\n      .then(response => response.json())\n      .then(data => this.setState({ name: data.name, email: data.email }));\n  }\n\n  render() {\n    const { name, email, phone } = this.state;\n    return (\n      <div>\n        <h1>{name}</h1>\n        <h2>{email}</h2>\n      </div>\n    );\n  }\n}\nexport default Test;\n","import React, { Component } from \"react\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { Provider } from \"./context\";\nimport Header from \"./components/layout/Header\";\nimport About from \"./components/pages/About\";\nimport NotFound from \"./components/pages/NotFound\";\nimport Contacts from \"./components/contacts/Contacts\";\nimport AddContact from \"./components/contacts/AddContact\";\nimport EditContact from \"./components/contacts/EditContact\";\nimport Test from \"./components/test/Test\";\n//import \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider>\n        <Router>\n          <div className=\"App\">\n            <Header branding=\"Contact Manager\" />\n            <div className=\"container\">\n              <Switch>\n                <Route exact path=\"/\" component={Contacts} />\n                <Route path=\"/about\" component={About} />\n                <Route path=\"/contact/add\" component={AddContact} />\n                <Route path=\"/contact/edit/:id\" component={EditContact} />\n                <Route path=\"/test\" component={Test} />\n\n                <Route component={NotFound} />\n              </Switch>\n            </div>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./common/style/index.scss\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nserviceWorker.unregister();\n"],"sourceRoot":""}